/*! 18-08-2017 */

function ZhFilterBuilder(Query){var defaultOperators={"field/between-dates.html":Query.BETWEEN,"field/calendar.html":Query.EQ,"field/date.html":Query.EQ,"field/datetime.html":Query.EQ,"field/interval.html":Query.BETWEEN,"field/number-edit.html":Query.EQ,"field/number-keyboard.html":Query.EQ,"field/number.html":Query.EQ,"field/radio.html":Query.EQ,"field/select.html":Query.EQ,"field/select-simple.html":Query.EQ,"field/select-native.html":Query.EQ,"field/select-multiple.html":Query.IN,default:Query.LIKE_INSENSITIVE};var buildFilterByTemplate={"field/select.html":buildSelectFilter,"field/select-native.html":buildSelectNativeFilter,"field/select-multiple.html":buildSelectMultipleFilter,default:buildDefaultFilter};this.setDefaultOperator=function(template,operator){defaultOperators[template]=operator};this.setBuildFilterByTemplate=function(template,callback){buildFilterByTemplate[template]=callback};function getFieldTemplate(field){return field.template.split("#").pop()}function getFilterBuilderByTemplate(template){if(!buildFilterByTemplate[template]){template="default"}return buildFilterByTemplate[template]}this.buildFilter=function(fields,row){var query=Query.build();fields.forEach(function(field){var template=getFieldTemplate(field);getFilterBuilderByTemplate(template)(query,field,row)});return query.where()};var operatorFlow={BETWEEN:function(query,value){query.between([value.start,value.end])},"NOT BETWEEN":function(query,value){query.notBetween([value.start,value.end])},LIKE:function(query,value){query.like("%"+value+"%")},LIKE_I:function(query,value){query.likeInsensitive("%"+value+"%")},"NOT LIKE":function(query,value){query.notLike("%"+value+"%")},"LIKE ALL":function(query,value){query.likeAll("%"+value+"%")},"<>":function(query,value){query.notEquals(value)},"=":function(query,value){query.equals(value)},">":function(query,value){query.greater(value)},"<":function(query,value){query.lower(value)},">=":function(query,value){query.greaterOrEqual(value)},"<=":function(query,value){query.lowerOrEqual(value)},IN:function(query,value){query.in(value)},"NOT IN":function(query,value){query.notIn(value)}};function buildFilter(query,fieldName,operator,value){query.where(fieldName);operatorFlow[operator](query,value)}function buildDefaultFilter(query,field,currentRow){var fieldName=field.name;var value=currentRow[fieldName];if(value){var operator=getFieldOperator(field);buildFilter(query,fieldName,operator,value)}}function buildSelectWithValueFieldFilter(query,field,currentRow,operator){var fieldName=field.valueField;var value=currentRow[fieldName];if(value){buildFilter(query,fieldName,operator,value)}}function buildSelectWithValueFieldsFilter(query,field,currentRow,operator){var fieldName=field.name;var value=currentRow[fieldName];if(value){buildFilter(query,fieldName,operator,value)}}function buildSelectWithOutDataFilter(query,field,currentRow,operator){var outData=field.outData;Object.keys(outData).forEach(function(outDataKey){var fieldName=outData[outDataKey];var value=currentRow[fieldName];if(value){buildFilter(query,fieldName,operator,value)}})}function buildSelectFilter(query,field,currentRow){var operator=getFieldOperator(field);if(field.valueField){buildSelectWithValueFieldFilter(query,field,currentRow,operator)}else if(field.valueFields){buildSelectWithValueFieldsFilter(query,field,currentRow,operator)}else if(field.outData){buildSelectWithOutDataFilter(query,field,currentRow,operator)}else{throw new Error("Invalid select configuration on field "+field.name)}}function buildSelectNativeWithValueFieldFilter(query,field,currentRow,operator){var fieldName=field.valueField;var value=currentRow[fieldName];if(value){buildFilter(query,fieldName,operator,value)}}function buildSelectNativeFilter(query,field,currentRow){var operator=getFieldOperator(field);if(field.valueField){buildSelectNativeWithValueFieldFilter(query,field,currentRow,operator)}else{throw new Error("Invalid select-native configuration on field "+field.name)}}function buildSelectMultipleWithValueFieldFilter(query,field,currentRow,operator){var fieldName=field.name;var value=currentRow[fieldName];if(value){buildFilter(query,fieldName,operator,value)}}function buildSelectMultipleWithValueFieldsFilter(query,field,currentRow,operator){throw new Error("Filter on field select-multiple with property valuesFields is not supported yet. "+'Field "'+field.name+'"')}function buildSelectMultipleFilter(query,field,currentRow){var operator=getFieldOperator(field);if(field.valueField){buildSelectMultipleWithValueFieldFilter(query,field,currentRow,operator)}else if(field.valueFields){buildSelectMultipleWithValueFieldsFilter(query,field,currentRow,operator)}else{throw new Error("Invalid select-multiple configuration on field "+field.name)}}function getFieldOperator(field){var template=getFieldTemplate(field);return field.operator||defaultOperators[template]||defaultOperators["default"]}}Configuration(function(ContextRegister){ContextRegister.register("ZhFilterBuilder",ZhFilterBuilder)});function ZhFilterDescriptionBuilder(DecodeValueFieldService){this.buildFilterAppliedInfo=function(preferenceName){return[{label:"Filter",value:preferenceName}]};this.buildFilterInfo=function(fields,currentRow,searchCriteria){var filterInfo=[];fields.forEach(function(field){buildDefaultFilterInfo(filterInfo,field,currentRow)});buildFilterInfoForSearchCriteria(fields,filterInfo,searchCriteria);return filterInfo};function buildFilterInfoForSearchCriteria(fields,filterInfo,searchCriteria){if(searchCriteria){Object.keys(searchCriteria).forEach(function(fieldName){if(searchCriteria[fieldName]!==""){var fieldLabel;if(fieldName==="_ALL"){fieldLabel="All fields"}else{fieldLabel=getFieldByName(fields,fieldName).label}filterInfo.push(buildFilterInfo(fieldLabel,searchCriteria[fieldName]))}})}}function getFieldByName(fields,fieldName){return fields.filter(function(field){return field.name===fieldName}).shift()}function buildFilterInfo(label,value){return{label:label,value:value}}function isConditionProvided(condition){return condition!==undefined&&condition!==null&&condition!==""}function buildDefaultFilterInfo(filterInfo,field,currentRow){var condition=currentRow[field.name];if(isConditionProvided(condition)){var value=DecodeValueFieldService.model(field,condition);filterInfo.push(buildFilterInfo(field.label,value))}}}Configuration(function(ContextRegister){ContextRegister.register("ZhFilterDescriptionBuilder",ZhFilterDescriptionBuilder)});function ZhFilterPreferences(ZhPreferences,ZhFilterBuilder,ZhFilterDescriptionBuilder,templateManager,eventAggregator,ZhUtil,eventEngine,metaDataFactory){var originalFilter={ID:"ORIGINAL",USER_ID:0,ORGANIZATION_ID:0,LABEL:"Original"};function shouldShowFilterAction(widget){return Util.get(widget,["floatingControl","searchAction"])!==false||Util.get(widget,["floatingControl","customizationAction","filter"])!==false}eventAggregator.subscribe("beforeProjectStartup",function(){ZhPreferences.registerRepository("zh-filter-preferences#filter");templateManager.project.customFloatingActions.push({name:"Filter Action",label:"Search",type:"filter",order:20,icon:"search",template:"zh-filter-preferences#floating-filter-card.html",expandable:true,isVisible:shouldShowFilterAction})});eventEngine.registerEvent("FilterBeforeApply","beforeFilterApply");eventEngine.registerEvent("FilterAfterApply","afterFilterApply");this.updateFilters=function(widgetID,dataSource){return this.getWidgetFilters(widgetID).then(function(filters){return filters}).then(function(filters){return this.addIsDefaultFilterToFilters(filters,widgetID).then(function(filters){dataSource.data=filters})}.bind(this))};this.factoryFields=function(parentWidget,gridFields){var fields=prepareFieldsToFormFilter(factoryFields(parentWidget,gridFields));var searchFields=prepareFieldsToFormFilter(factorySearchFields(parentWidget,gridFields));return fields.concat(searchFields)};this.addIsDefaultFilterToFilters=function(filters,widgetID){return ZhPreferences.getDefaultWidgetPreferences(widgetID).then(function(defaultPreferences){var defaultFilter=defaultPreferences.DEFAULT_FILTER;return filters.map(addIsDefaultFilterToFilter.bind(this,defaultFilter))})};function addIsDefaultFilterToFilter(defaultFilter,filter){filter.DEFAULT_FILTER=filter.ID===defaultFilter;return filter}this.loadFilters=function(query){return ZhPreferences.loadPreferences("filter",query)};this.getWidgetFilters=function(widgetID){return ZhPreferences.getWidgetPreferences("filter",widgetID)};this.getFilters=function(query){return ZhPreferences.getPreferences("filter",query)};this.saveFilters=function(filters){return ZhPreferences.savePreferences("filter",filters)};this.deleteFilters=function(filters){return ZhPreferences.deletePreferences("filter",filters)};this.updateDefaultFilter=function(widgetID,filterID){return ZhPreferences.updateDefaultWidgetPreferences("DEFAULT_FILTER",widgetID,filterID)};function applyDefaultValues(widget,filter){filter.FILTER_ROW="{}"}function getFilterConditions(filters){return filters.filter(function(filter){return filter.name.indexOf("SEARCHLIST_")===-1}).map(function(filter){filter.isCustomFilter=true;return filter})}function getSearchConditions(filters){var searchFields=Util.clone(filters);searchFields=searchFields.filter(function(filter){return~filter.name.indexOf("SEARCHLIST_")});return searchFields.map(function(filter){filter.name=filter.name.replace("SEARCHLIST_","");return filter})}this.applyOriginalFilter=function(widget){applyDefaultValues(widget,originalFilter);return this.applyFilter(widget,originalFilter)};function triggerBeforeFilterApplyEvent(widget,preference,filters){if(widget.beforeFilterApply){widget.beforeFilterApply({preference:preference,filters:filters})}}function triggerAfterFilterApplyEvent(widget,preference,filters){if(widget.afterFilterApply){widget.afterFilterApply({preference:preference,filters:filters})}}this.applyFilter=function(widget,preference){var filterRow=JSON.parse(preference.FILTER_ROW);var fields=this.factoryFields(null,widget.fields);var filters=ZhFilterBuilder.buildFilter(fields,filterRow);triggerBeforeFilterApplyEvent(widget,preference,filters);var filterConditions=getFilterConditions(filters);widget.dataSourceFilter=getOriginalDataSourceFilters(widget.dataSourceFilter).concat(filterConditions);var searchConditions=getSearchConditions(filters);widget.setSearchCriteria(searchConditions);var searchCriteria=buildSearchCriteria(searchConditions);return widget.reload(ZhUtil.getLikeAllFilter(widget,searchCriteria)).then(function(){this.updateFilterInfo(widget,fields,filterRow,preference);widget.setAppliedFilter(preference);triggerAfterFilterApplyEvent(widget,preference,filters)}.bind(this))};this.updateFilterInfo=function(widget,fields,filterRow,preference,searchCriteria){var filterInfo;if(preference.ID==="ORIGINAL"||preference.ID==="EDITED"){filterInfo=ZhFilterDescriptionBuilder.buildFilterInfo(fields,filterRow,searchCriteria)}else{filterInfo=ZhFilterDescriptionBuilder.buildFilterAppliedInfo(preference.LABEL)}widget._filterInfo=filterInfo};function trimPercentageSymbol(value){if(value.charAt(0)==="%"){value=value.substr(1)}if(value.charAt(value.length-1)==="%"){value=value.substr(0,value.length-1)}return value}function buildSearchCriteria(conditions){var searchCriteria={};conditions.forEach(function(condition){searchCriteria[condition.name]=trimPercentageSymbol(condition.value)});return searchCriteria}function getOriginalDataSourceFilters(dataSourceFilter){return dataSourceFilter.filter(function(filter){return!filter.isCustomFilter})}function removeConflictingProperties(field){var conflictingProperties=["selectWidget"];conflictingProperties.forEach(function(property){delete field[property]})}function factoryFields(parentWidget,gridFields){return gridFields.filter(function(field){return!Util.isUndefined(field.template)}).map(function(field){var factoredField=metaDataFactory.fieldFactory(field,parentWidget);removeConflictingProperties(factoredField);return factoredField})}function factorySearchFields(parentWidget,gridFields){var fields=[];fields.push(metaDataFactory.fieldFactory({id:"SEARCHLIST__ALL",label:"All Fields",name:"SEARCHLIST__ALL",class:12,template:"field/text-edit.html",isVisible:true,showOnList:true,descending:true,fieldGroup:"COLUMNS_FILTER"},parentWidget));return fields.concat(gridFields.filter(function(field){return!field.skipSearch&&Util.isUndefined(field.template)}).map(function(field){var factoredField=metaDataFactory.fieldFactory(field);delete factoredField.$$hashKey;factoredField.id="SEARCHLIST_"+factoredField.id;factoredField.name="SEARCHLIST_"+factoredField.name;factoredField.class=6;factoredField.isVisible=true;factoredField.readOnly=false;factoredField.validations={};factoredField.template="field/text-edit.html";factoredField.fieldGroup="COLUMNS_FILTER";factoredField.widget=parentWidget;return factoredField}))}function prepareFieldsToFormFilter(fields){return fields.map(function(field){return field.filterProperties?mergeFieldNewProperties(field,field.filterProperties):field})}function mergeFieldNewProperties(field,filterProperties){var keys=Object.keys(field);keys=keys.concat(Object.keys(filterProperties).filter(function(key){return keys.indexOf(key)==-1}));keys.forEach(function(property){field[property]=filterProperties.hasOwnProperty(property)?filterProperties[property]:field[property]});if(field.dataSource&&!(field.dataSource instanceof DataSource)){field.dataSource=metaDataFactory.factoryDataSource(field.dataSource,field.dataSourceFilter,field)}return field}}Configuration(function(ContextRegister){ContextRegister.register("ZhFilterPreferences",ZhFilterPreferences)});function ZhFilterWidgetsBuilder(restEngine,templateManager,metaDataFactory){function getWidgetJSON(widgetName){var widgetPath="zh-filter-preferences#json/widgets/"+widgetName+".json";return restEngine.requestMetaData(widgetPath).then(function(response){return response.data})}this.factoryWidget=function(widgetName){return getWidgetJSON(widgetName).then(function(widget){return metaDataFactory.widgetFactory(widget,templateManager.container)})};this.factoryFilterConfigurationWidget=function(){return this.factoryWidget("config")};this.factoryCreateFilterWidget=function(){return this.factoryWidget("createFilter")};this.factoryBuildFiltersConditionsWidget=function(){return this.factoryWidget("createFilterConditions")}}Configuration(function(ContextRegister){ContextRegister.register("ZhFilterWidgetsBuilder",ZhFilterWidgetsBuilder)});function ZhFilterCreateFilterConditionsController(ZhFilterPreferences,ZhFilterWidgetsBuilder,MessageService,ScreenService,ZHPromise,ZhUtil){var createFilterConditionsWidgetPromise=null;this.getCreateFilterConditionsWidget=function(){if(createFilterConditionsWidgetPromise===null){createFilterConditionsWidgetPromise=ZhFilterWidgetsBuilder.factoryBuildFiltersConditionsWidget()}return createFilterConditionsWidgetPromise};this.getCreateFilterConditionsWidgetForFilterPopup=function(){return this.getCreateFilterConditionsWidget().then(function(createFilterConditionsWidget){createFilterConditionsWidget.showAsModal=false;createFilterConditionsWidget.actions[0].isVisible=true;createFilterConditionsWidget.actions[1].isVisible=true;createFilterConditionsWidget.actions[2].isVisible=false;createFilterConditionsWidget.actions[3].isVisible=false;return createFilterConditionsWidget})};this.getCreateFilterConditionsWidgetForEditPreference=function(){return this.getCreateFilterConditionsWidget().then(function(createFilterConditionsWidget){createFilterConditionsWidget.showAsModal=true;createFilterConditionsWidget.actions[0].isVisible=false;createFilterConditionsWidget.actions[1].isVisible=false;createFilterConditionsWidget.actions[2].isVisible=true;createFilterConditionsWidget.actions[3].isVisible=true;return createFilterConditionsWidget})};this.saveAndApplyFilter=function(createFilterConditionsWidget){if(createFilterConditionsWidget.isValid()){var currentRow=createFilterConditionsWidget.currentRow;var filter=createFilterConditionsWidget.preference;filter.FILTER_ROW=JSON.stringify(ZhUtil.clearRow(currentRow));var configWidget=createFilterConditionsWidget.createNewFilterWidget.configWidget;var listWidget=configWidget.listWidget;return ZhFilterPreferences.saveFilters([filter]).then(function(){return ZhFilterPreferences.applyFilter(listWidget,filter)}).then(function(){ScreenService.closePopup(true);listWidget.activate();ZhFilterPreferences.updateFilters(listWidget.id,configWidget.dataSource)}).catch(function(error){MessageService.showMessageByCode("zh-filter-preferences#save_error",{ERROR:error.message})})}else{return ZHPromise.when()}};this.applyFilter=function(createFilterConditionsWidget){if(createFilterConditionsWidget.isValid()){var currentRow=createFilterConditionsWidget.currentRow;var filter={ID:"EDITED",FILTER_ROW:JSON.stringify(ZhUtil.clearRow(currentRow))};var listWidget=createFilterConditionsWidget.listWidget;return ZhFilterPreferences.applyFilter(listWidget,filter).then(function(){ScreenService.closePopup()})}else{return ZHPromise.when()}}}Configuration(function(ContextRegister){ContextRegister.register("ZhFilterCreateFilterConditionsController",ZhFilterCreateFilterConditionsController)});function ZhFilterCreateFilterController(ZhPreferences,ZhFilterPreferences,ZhFilterWidgetsBuilder,ZHPromise,ScreenService,ZhFilterCreateFilterConditionsController){var createFilterWidgetPromise=null;this.getCreateFilterWidget=function(){if(createFilterWidgetPromise===null){createFilterWidgetPromise=ZhFilterWidgetsBuilder.factoryCreateFilterWidget()}return createFilterWidgetPromise};this.proceedCreatingFilter=function(createNewFilterWidget){if(createNewFilterWidget.isValid()){return openCreateFilterConditionsWidget(createNewFilterWidget)}else{return ZHPromise.when()}};function openCreateFilterConditionsWidget(createNewFilterWidget){var label=createNewFilterWidget.currentRow.LABEL;return ZhFilterCreateFilterConditionsController.getCreateFilterConditionsWidgetForEditPreference().then(function(createFilterConditionsWidget){var configWidget=createNewFilterWidget.configWidget;var listWidget=configWidget.listWidget;createFilterConditionsWidget.label=ScreenService.i18n("Filter")+" - "+label;createFilterConditionsWidget.createNewFilterWidget=createNewFilterWidget;listWidget.fieldGroups=listWidget.fieldGroups||[];var fieldGroups=createFilterConditionsWidget.fieldGroups.concat(listWidget.fieldGroups);createFilterConditionsWidget.fieldGroups=fieldGroups;return ZhPreferences.getUserID().then(function(userID){return{__is_new:true,ID:null,USER_ID:userID,LABEL:label,WIDGET_ID:listWidget.id,LAST_MODIFIED_DATE:null}}).then(function(preference){createFilterConditionsWidget.preference=preference;createFilterConditionsWidget.fields=ZhFilterPreferences.factoryFields(createFilterConditionsWidget,listWidget.fields);createFilterConditionsWidget.newRow();return ScreenService.openPopup(createFilterConditionsWidget)})})}}Configuration(function(ContextRegister){ContextRegister.register("ZhFilterCreateFilterController",ZhFilterCreateFilterController)});function ZhFilterConfigWidgetController(ZhPreferences,ZhFilterPreferences,ZhFilterWidgetsBuilder,ScreenService,MessageService,ZHPromise,ZhFilterCreateFilterController,ZhFilterCreateFilterConditionsController){var configWidgetPromise=null;this.getConfigWidget=function(listWidget,dataSource){if(configWidgetPromise===null){configWidgetPromise=ZhFilterWidgetsBuilder.factoryFilterConfigurationWidget()}var userID=ZhPreferences.getUserID();return ZHPromise.all([userID,configWidgetPromise]).then(function(args){var userID=args[0];var configWidget=args[1];configWidget.listWidget=listWidget;configWidget.dataSourceFilter=[{name:"WIDGET_ID",operator:"=",value:listWidget.id},{name:"USER_ID",operator:"=",value:userID}];configWidget.dataSource=dataSource;return configWidget})};this.openCreateFilterWidget=function(configWidget){return ZhFilterCreateFilterController.getCreateFilterWidget().then(function(createNewFilterWidget){createNewFilterWidget.newRow();createNewFilterWidget.configWidget=configWidget;return ScreenService.openPopup(createNewFilterWidget)})};this.editFilter=function(configWidget,filter){var listWidget=configWidget.listWidget;return ZhFilterCreateFilterConditionsController.getCreateFilterConditionsWidgetForEditPreference().then(function(createFilterConditionsWidget){createFilterConditionsWidget.preference=filter;createFilterConditionsWidget.label=ScreenService.i18n("Filter")+" - "+filter.LABEL;createFilterConditionsWidget.createNewFilterWidget={configWidget:configWidget};var fields=ZhFilterPreferences.factoryFields(createFilterConditionsWidget,listWidget.fields);createFilterConditionsWidget.fields=fields;createFilterConditionsWidget.currentRow=JSON.parse(filter.FILTER_ROW);return ScreenService.openPopup(createFilterConditionsWidget)})};this.deleteFilters=function(configWidget){var filtersToDelete=configWidget.getCheckedRows();return MessageService.confirmMessageByCode("zh-filter-preferences#delete",{NR_OF_FILTERS:filtersToDelete.length}).then(function(){return ZhFilterPreferences.deleteFilters(filtersToDelete).then(function(){configWidget.dataSource.clearCheckedRows();ZhFilterPreferences.updateFilters(configWidget.listWidget.id,configWidget.dataSource)}).catch(function(error){MessageService.showMessageByCode("zh-filter-preferences#delete_error",{ERROR:error.message})})})};this.updateDefaultFilter=function(configWidget,filter){var listWidget=configWidget.listWidget;var filterID=filter.DEFAULT_FILTER?filter.ID:null;return ZhFilterPreferences.updateDefaultFilter(listWidget.id,filterID)}}Configuration(function(ContextRegister){ContextRegister.register("ZhFilterConfigWidgetController",ZhFilterConfigWidgetController)});function ZhFilterFloatingCardController($scope,ApplicationContext,ZhKeyboardService,templateManager,metaDataFactory,ScreenService,Query,eventEngine){var widget=$scope.widget;$scope.appliedPreference=null;var ZhFilterPreferences=ApplicationContext.ZhFilterPreferences;var ZhPreferences=ApplicationContext.ZhPreferences;var ZhFilterConfigWidgetController=ApplicationContext.ZhFilterConfigWidgetController;var ZhFilterCreateFilterConditionsController=ApplicationContext.ZhFilterCreateFilterConditionsController;var dataSource=metaDataFactory.factoryDataSource({name:"zh-filter-preferences#/filter",localStorage:false,lazyLoad:true,rest:true,data:[]});dataSource.afterLoadDataSource(function(){return ZhFilterPreferences.addIsDefaultFilterToFilters(dataSource.data,widget.id).then(function(filters){dataSource.data=filters})});$scope.customizationCard={label:"Filters",type:"filter",openFilterConfiguration:openFilterConfiguration,refreshFilters:refreshFilters,openFilterWidget:openFilterWidget,applyOriginalFilter:applyOriginalFilter,applyFilter:applyPreference,dataSource:dataSource};widget.setAppliedFilter=setAppliedFilter;widget.openFilterWidget=openFilterWidget;function setAppliedFilter(filter){$scope.appliedPreference=filter}function updateFilterRow(filterRow,searchCriteria){var row=JSON.parse(filterRow);Object.keys(row).forEach(function(key){if(key.indexOf("SEARCHLIST_")===0){delete row[key]}});Object.keys(searchCriteria).forEach(function(key){row["SEARCHLIST_"+key]=searchCriteria[key]});return JSON.stringify(row)}$scope.$watchCollection("widget.searchCriteria",function(searchCriteria){var filterRow=$scope.appliedPreference&&$scope.appliedPreference.FILTER_ROW?updateFilterRow($scope.appliedPreference.FILTER_ROW,searchCriteria||{}):"{}";$scope.appliedPreference={ID:"EDITED",FILTER_ROW:filterRow};ZhFilterPreferences.updateFilterInfo(widget,widget.fields,JSON.parse(filterRow),$scope.appliedPreference,searchCriteria)});function openFilterConfiguration(){var dataSource=$scope.customizationCard.dataSource;return ZhFilterConfigWidgetController.getConfigWidget(widget,dataSource).then(function(configWidget){return ScreenService.openPopup(configWidget)})}function refreshFilters(){return ZhPreferences.getUserID().then(function(userId){var query=Query.build().where("WIDGET_ID").equals(widget.id).where("USER_ID").equals(userId);return dataSource.load(query.where())})}function openFilterWidget(){return ZhFilterCreateFilterConditionsController.getCreateFilterConditionsWidgetForFilterPopup().then(function(createFilterConditionsWidget){createFilterConditionsWidget.listWidget=widget;createFilterConditionsWidget.label="Filter";var fields=ZhFilterPreferences.factoryFields(createFilterConditionsWidget,widget.fields);createFilterConditionsWidget.fields=fields;if($scope.appliedPreference){createFilterConditionsWidget.currentRow=JSON.parse($scope.appliedPreference.FILTER_ROW)}ScreenService.openPopup(createFilterConditionsWidget)})}function applyOriginalFilter(){return ZhFilterPreferences.applyOriginalFilter(widget)}function applyPreference(filter){return ZhFilterPreferences.applyFilter(widget,filter)}function isFilterPreferencesActive(){return Util.get(widget,["floatingControl","customizationAction","filter"])!==false}function getDefaultFilter(){return dataSource.data.filter(function(filter){return filter.DEFAULT_FILTER}).shift()}function applyDefaultFilter(){var filter=getDefaultFilter();if(filter){applyPreference(filter)}}function isMobiScrollOpen(){return $(".mbsc-mobiscroll").length>0}function hasPopupOpened(){return!ScreenService.isSideMenuOpen()&&!isMobiScrollOpen()&&!ScreenService.isAlertShown()}function openWidgetFilter(event,key){if(hasPopupOpened()&&isFilterPreferencesActive()){openFilterWidget()}return false}function openWidgetSearch(event,key){if(hasPopupOpened()){var scope=$(".zh-floating-control:last").scope();scope.openSearchAction()}return false}function bindKeyboardEvents(){ZhKeyboardService.unbind(templateManager.project.shortcutKeys.openWidgetFilter||"mod+l");ZhKeyboardService.unbind(templateManager.project.shortcutKeys.openWidgetSearch||"mod+f");ZhKeyboardService.bind(templateManager.project.shortcutKeys.openWidgetFilter||"mod+l",openWidgetFilter);ZhKeyboardService.bind(templateManager.project.shortcutKeys.openWidgetSearch||"mod+f",openWidgetSearch)}bindKeyboardEvents();eventEngine.bindEvent(widget,"WidgetOnActivate",bindKeyboardEvents);(function initFilterPreferences(){if(isFilterPreferencesActive()){if(!widget.id){throw new Error('Widget\'s must have "id" to use Preferences. '+'Widget with name "'+widget.name+'" does not have an id.')}ZhFilterPreferences.updateFilters(widget.id,$scope.customizationCard.dataSource).then(function(){applyDefaultFilter()})}})()}var ZeedhiDirectives=angular.module("ZeedhiDirectives");ZeedhiDirectives.directive("zhFloatingControl",["$timeout",ZhFilterFloatingControl]);function ZhFilterFloatingControl($timeout){function checkFloatingCardOverflow(e){var actionElement=$(e.target).closest(".float-action");var floatingControl=actionElement.parents(".zh-floating-control");var widgetContainer=actionElement.closest(".container");var actionTop,actionBottom;var widgetTop,widgetBottom;if(!actionElement.hasClass("opened")){actionElement.removeClass("fix-position-top");actionElement.removeClass("fix-position-bottom");actionTop=actionElement.offset().top;widgetTop=widgetContainer.offset().top;widgetBottom=widgetTop+widgetContainer.height();if(floatingControl.hasClass("pos-top")){actionTop=actionTop-200+actionElement.height();if(actionTop<widgetTop){actionElement.addClass("fix-position-top")}}else{actionBottom=actionTop+200;if(actionBottom>widgetBottom){actionElement.addClass("fix-position-bottom")}}}}return{priority:10,link:function($scope,element,attrs,controller){var widget=$scope.widget;if(widget.floatingControl===false){return}var defaultOptions={searchAction:Util.isUndefined(element.parent().attr("data-hide-search"))&&Util.isUndefined(element.parent().attr("hide-search")),openSearch:false};widget.floatingControl=Util.extend(defaultOptions,widget.floatingControl);widget.floatingControl.addStatus({priority:20,classString:"searching",icon:"search",conditionFunction:function(){return widget._filterInfo&&widget._filterInfo.length>0},infoTemplate:function(){if(widget.floatingControl.customizationAction&&widget.floatingControl.customizationAction.filter){icon="filter";method="openFilter"}else{icon="close-x";method="clearFilter"}return'<div class="searching-control-info"><span data-zh-icon="'+icon+' no-border icon-white" data-zh-touchstart="'+method+'()"></span><div class="searching-control-info-details"><span ng-repeat="info in widget._filterInfo"><b>{{info.label|i18n}}:</b> {{info.value}}</span></div></div><div class="searching-control-info-text" data-zh-bind-translate="\'Filter applied\'"></div>'},scope:$scope});$scope.openSearchAction=function(){$timeout.cancel($scope._closeTimeout);if(!element.hasClass("opened")){$scope.toggleActionMenu()}$scope.closeOpenedActions();var searchAction=element.find(".search-action").closest(".float-action");if(searchAction&&searchAction.length>0){searchAction.find("span.search-action-icon").click();Util.selectElement(searchAction.find("input"))}};$scope.openFilter=function(){$scope.widget.openFilterWidget()};$scope.clearFilter=function(){$scope.widget.searchCriteria={}};$scope.togglePreferencesCard=function(e){checkFloatingCardOverflow(e);$scope.toggleAction(e)};$scope.clearSearch=function(event,fieldName){if(!fieldName){widget.searchCriteria={}}else{delete widget.searchCriteria[fieldName]}if(event){Util.selectElement($(event.target).closest(".floating-card-input").find("input"))}};$scope.toggleSearchFieldsList=function(event){if(!widget.floatingControl.customizationAction||!widget.floatingControl.customizationAction.filter){var el=$(event.target).closest(".floating-card").find(".floating-card-search-field-select");el.toggleClass("opened");if(el.hasClass("opened")){$(event.target).closest(".floating-card").find(".floating-card-select-field-options").removeClass("opened");$(event.target).closest(".floating-card").find(".zh-select-search-floating").removeClass("opened")}}};$scope.selectSearchField=function(field){$scope.searchField=field;element.find(".floating-card-search-field-select").removeClass("opened");element.find("input.zh-input-search-floating").focus()}}}}(function(){window.templateUrls=window.templateUrls||[];window.metadataUrls=window.metadataUrls||[];window.serviceUrls=window.serviceUrls||[];var PACKAGE_NAME="zh-filter-preferences";var hasTemplateUrl=Boolean(window.templateUrls.find(function(value){return value.package===PACKAGE_NAME}));var hasMetadataUrl=Boolean(window.metadataUrls.find(function(value){return value.package===PACKAGE_NAME}));var hasServiceUrl=Boolean(window.serviceUrls.find(function(value){return value.package===PACKAGE_NAME}));if(!hasTemplateUrl){window.templateUrls.push({package:PACKAGE_NAME,baseUrl:"bower_components/zh-filter-preferences/dist/templates/"})}if(!hasMetadataUrl){window.metadataUrls.push({package:PACKAGE_NAME,baseUrl:"bower_components/zh-filter-preferences/dist/assets/"})}if(!hasServiceUrl){window.serviceUrls.push({package:PACKAGE_NAME,baseUrl:"../backend/service/index.php/zh-preferences"})}})();