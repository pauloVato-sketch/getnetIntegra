<?php

namespace Odhen\API\Util;

class OracleQuery {

    public function getArray() {
        return self::QUERY_MAPPING;
    }

    const QUERY_MAPPING = array(
        'SQL_INSERE_VENDAREST'                    => self::SQL_INSERE_VENDAREST,
        'GET_VRVENDBRUT'                    => self::GET_VRVENDBRUT,
        'GET_CANCELAMENTOS'                 => self::GET_CANCELAMENTOS,
        'GET_VRDESITVEND'                   => self::GET_VRDESITVEND,
        'GET_VRACRITVEND'                   => self::GET_VRACRITVEND,
        'GET_VRMOVIVEND'                    => self::GET_VRMOVIVEND,
        'GET_PAGAMENTOS'                    => self::GET_PAGAMENTOS,
        'TOTAL_VENDAS'                      => self::TOTAL_VENDAS,
        'GET_LAST_SALE'                     => self::GET_LAST_SALE,
        'GET_CONSUMER_BY_ID'                => self::GET_CONSUMER_BY_ID,
        'GET_TANQUEBICOH_BY_BICO'           => self::GET_TANQUEBICOH_BY_BICO,
        'GET_MAX_ITLANCTOEST'               => self::GET_MAX_ITLANCTOEST,
        'GET_INFO_PAYMENT_NFCE'             => self::GET_INFO_PAYMENT_NFCE,
        'BUSCA_OBSERVACOES'                 => self::BUSCA_OBSERVACOES,
        'SQL_PRECOS'                        => self::SQL_PRECOS,
        'SQL_PRECOS_DIA'                    => self::SQL_PRECOS_DIA,
        'TABELA_VENDA'                      => self::TABELA_VENDA,
        'ITEM_PRECO'                        => self::ITEM_PRECO,
        'ITEM_PRECO_DIA'                    => self::ITEM_PRECO_DIA,
        'ATUALIZA_VENDA_SAT'                => self::ATUALIZA_VENDA_SAT,
        'GET_SALDOCONSUMIDOR'               => self::GET_SALDOCONSUMIDOR,
        'VERIFICA_FECHAMENTO_CAIXA'         => self::VERIFICA_FECHAMENTO_CAIXA,
        'EXECUTE_NOVO_CODIGO'               => self::EXECUTE_NOVO_CODIGO,
        'INSERT_MOVCAIXA_OPENPOS'           => self::INSERT_MOVCAIXA_OPENPOS,
        'INSERT_COMANDAVEN'                 => self::INSERT_COMANDAVEN,
        'INSERT_VENDAREST'                  => self::INSERT_VENDAREST,
        'GET_SALES_TABLE'                   => self::GET_SALES_TABLE,
        'GET_ITEM_PRICE'                    => self::GET_ITEM_PRICE,
        'GET_SMARTPROMO_PRICE'              => self::GET_SMARTPROMO_PRICE,
        'GET_NRTRANSACOES'                  => self::GET_NRTRANSACOES,
        'GET_NRPRIMSEQ'                     => self::GET_NRPRIMSEQ,
        'GET_NRFINALSEQ'                    => self::GET_NRFINALSEQ,
        'GET_ITENS_CANCELADOS'              => self::GET_ITENS_CANCELADOS,
        'TOTAL_CREDITO'                     => self::TOTAL_CREDITO,
        'GET_IMPOSTOS'                      => self::GET_IMPOSTOS,
        'UPDATE_VENDA_NFCE'                 => self::UPDATE_VENDA_NFCE,
        'BUSCA_RECEBIMENTOS'                => self::BUSCA_RECEBIMENTOS,
        'GET_TOTAL_VENDA_CREDITO_PESSOAL'   => self::GET_TOTAL_VENDA_CREDITO_PESSOAL,
        'PRODUTO_CONSUMIDO_DIA'             => self::PRODUTO_CONSUMIDO_DIA,
        'SQL_BUSCA_CARTOES'                 => self::SQL_BUSCA_CARTOES,
        'BUSCA_DATA_ULTIMA_VENDA'           => self::BUSCA_DATA_ULTIMA_VENDA,
        'GET_ULTIMA_VENDA_SAT'              => self::GET_ULTIMA_VENDA_SAT,
        'CHECK_INDEX'                       => self::CHECK_INDEX,
        'SQL_GET_CONSUMIDOR_SALDO_DEBITO'   => self::SQL_GET_CONSUMIDOR_SALDO_DEBITO,
        'GET_SANGRIA'                       => self::GET_SANGRIA,
        'CALCULA_TOTAL_COMANDA'             => self::CALCULA_TOTAL_COMANDA,
        'GET_PRODUCTS_TO_PRINT_NFCE'        => self::GET_PRODUCTS_TO_PRINT_NFCE,
        'BUSCA_IMPRESSORA_DELIVERY'         => self::BUSCA_IMPRESSORA_DELIVERY,
        'GET_DADOSPRODIMP_XML'              => self::GET_DADOSPRODIMP_XML,
        'GET_DADOSPROD'                     => self::GET_DADOSPROD,
        'GET_PARAVEND_PRICING_TABLE'        => self::GET_PARAVEND_PRICING_TABLE,
        'BUSCA_PRODUTO_SUBGRUPO_API'        => self::BUSCA_PRODUTO_SUBGRUPO_API,
        'BUSCA_ITENS_PEDIDOS'               => self::BUSCA_ITENS_PEDIDOS,
        'CHECK_FOR_CONFTELA'                => self::CHECK_FOR_CONFTELA,
        'LOCAL_CERTIFICADO_EXTERNO'         => self::LOCAL_CERTIFICADO_EXTERNO,
        'TABELA_VENDA_GERAL'                => self::TABELA_VENDA_GERAL,
        'ITEM_PRECO_GERAL'                  => self::ITEM_PRECO_GERAL,
        'ITEM_PRECO_DIA_GERAL'              => self::ITEM_PRECO_DIA_GERAL,
        'CAMPANHA_COMPRE_GANHE'             => self::CAMPANHA_COMPRE_GANHE
    );

    const GET_VRVENDBRUT ="
        SELECT SUM(NVL(A.VENDAS,0)) AS VRVENDBRUT
          FROM (SELECT I.CDFILIAL, I.CDCAIXA, I.NRSEQVENDA,
                      SUM(ROUND(I.QTPRODVEND * (I.VRUNITVEND + NVL(I.VRUNITVENDCL,0)),2) + NVL(I.VRACRITVEND,0)) AS VENDAS
                  FROM ITEMVENDA I JOIN VENDA V ON I.CDFILIAL   = V.CDFILIAL
                                              AND I.CDCAIXA    = V.CDCAIXA
                                              AND I.NRSEQVENDA = V.NRSEQVENDA
        WHERE I.CDFILIAL = :CDFILIAL
          AND I.CDCAIXA = :CDCAIXA
          AND ((:FINAL = 1 AND TO_CHAR(V.DTABERTUR, 'YYYY-MM-DD') = :DTABERCAIX)
            OR (:FINAL <> 1 AND V.DTABERTUR = :DTABERCAIX))
          AND V.IDSITUVENDA IN ('O')
        GROUP BY I.CDFILIAL, I.CDCAIXA, I.NRSEQVENDA) A
    ";

    const GET_CANCELAMENTOS = "
        SELECT SUM(CAN.TRANSCANC) AS TRANSCANC, SUM(CAN.VRCANCEL) AS VRCANCEL
          FROM (
            SELECT COUNT(DISTINCT(V.NRSEQVENDA)) AS TRANSCANC,
                NVL(SUM(ROUND(I.QTPRODVEND*(I.VRUNITVEND+I.VRUNITVENDCL)+NVL(I.VRACRITVEND,0)- NVL(I.VRDESITVEND,0),2)),0) AS VRCANCEL
              FROM ITEMVENDA I
            JOIN VENDA V
              ON I.CDFILIAL = V.CDFILIAL
              AND I.CDCAIXA = V.CDCAIXA
              AND I.NRSEQVENDA = V.NRSEQVENDA
            WHERE V.CDFILIAL = :CDFILIAL
              AND V.CDCAIXA = :CDCAIXA
              AND ((:FINAL = 1 AND TO_CHAR(V.DTABERTUR, 'YYYY-MM-DD') = :DTABERCAIX)
                OR (:FINAL <> 1 AND V.DTABERTUR = :DTABERCAIX))
              AND V.IDSITUVENDA = 'C'
            UNION ALL
            SELECT COUNT(DISTINCT(V.NRSEQVENDA)) AS TRANSCANC,
                NVL(SUM(ROUND(I.QTPRODVENDC*(I.VRUNITVENDC+I.VRUNITVENCLC)+NVL(I.VRACRITVENDC,0),2)),0) AS VRCANCEL
              FROM VENDA V
            JOIN ITVENDACAN I
              ON V.CDFILIAL = I.CDFILIAL
              AND V.CDCAIXA = I.CDCAIXA
              AND V.NRSEQVENDA = I.NRSEQVENDA
            WHERE V.CDFILIAL = :CDFILIAL
              AND V.CDCAIXA = :CDCAIXA
              AND ((:FINAL = 1 AND TO_CHAR(V.DTABERTUR, 'YYYY-MM-DD') = :DTABERCAIX)
                OR (:FINAL <> 1 AND V.DTABERTUR = :DTABERCAIX))) CAN
    ";

    const GET_VRDESITVEND = "
        SELECT SUM(NVL(I.VRDESITVEND, 0)) AS VRDESITVEND
          FROM ITEMVENDA I
        JOIN VENDA V
          ON I.CDFILIAL = V.CDFILIAL
          AND I.CDCAIXA = V.CDCAIXA
          AND I.NRSEQVENDA = V.NRSEQVENDA
        WHERE V.CDFILIAL = :CDFILIAL
          AND V.CDCAIXA = :CDCAIXA
          AND ((:FINAL = 1 AND TO_CHAR(V.DTABERTUR, 'YYYY-MM-DD') = :DTABERCAIX)
            OR (:FINAL <> 1 AND V.DTABERTUR = :DTABERCAIX))
          AND V.IDSITUVENDA = 'O'
    ";

    const GET_VRACRITVEND = "
        SELECT SUM(NVL(I.VRACRITVEND,0)) AS VRACRITVEND
          FROM ITEMVENDA I
        JOIN VENDA V
          ON I.CDFILIAL = V.CDFILIAL
          AND I.CDCAIXA = V.CDCAIXA
          AND I.NRSEQVENDA = V.NRSEQVENDA
        WHERE V.CDFILIAL = :CDFILIAL
          AND V.CDCAIXA = :CDCAIXA
          AND ((:FINAL = 1 AND TO_CHAR(V.DTABERTUR, 'YYYY-MM-DD') = :DTABERCAIX)
          OR (:FINAL <> 1 AND V.DTABERTUR = :DTABERCAIX))
          AND V.IDSITUVENDA = 'O'
    ";

    const GET_VRMOVIVEND = "
        SELECT SUM(VRMOVIVEND) AS VRMOVIVEND
          FROM MOVCAIXA
        WHERE CDFILIAL = :CDFILIAL
          AND CDCAIXA = :CDCAIXA
          AND ((:FINAL = 1 AND TO_CHAR(DTABERCAIX, 'YYYY-MM-DD') = :DTABERCAIX)
            OR (:FINAL <> 1 AND DTABERCAIX = :DTABERCAIX))
          AND IDTIPOMOVIVE = 'A'
    ";

    const GET_PAGAMENTOS = "
        SELECT RC.CDTIPORECE, RC.NMTIPORECE, RC.VRMOVIVEND AS VALOR_TOTAL, RC.VRTROCO
            FROM (SELECT T.CDTIPORECE, T.NMTIPORECE,
                            SUM(NVL(S.VRMOVIVEND,0)) AS VRTROCO,
                            SUM(NVL(E.VRMOVIVEND,0) - NVL(S.VRMOVIVEND,0)) AS VRMOVIVEND
                        FROM TIPORECE T
                        JOIN (SELECT CDFILIAL, CDCAIXA, DTABERCAIX, NRSEQVENDA,
                                                CDTIPORECE, SUM(NVL(VRMOVIVEND,0)) AS VRMOVIVEND
                                          FROM MOVCAIXA
                                          WHERE CDFILIAL  = :CDFILIAL
                                            AND CDCAIXA   = :CDCAIXA
                                            AND ((:FINAL = 1 AND TO_CHAR(DTABERCAIX, 'YYYY-MM-DD') = :DTABERCAIX)
                                              OR (:FINAL <> 1 AND DTABERCAIX = :DTABERCAIX))
                                            AND IDTIPOMOVIVE IN ('E','T')
                                          GROUP BY CDFILIAL, CDCAIXA, DTABERCAIX, CDTIPORECE, NRSEQVENDA) E
                          ON T.CDTIPORECE  = E.CDTIPORECE
                  LEFT JOIN
                            (SELECT CDFILIAL, CDCAIXA, DTABERCAIX, NRSEQVENDA,
                                    CDTIPORECE, SUM(NVL(VRMOVIVEND,0)) AS VRMOVIVEND
                                FROM MOVCAIXA
                              WHERE CDFILIAL = :CDFILIAL
                                AND CDCAIXA  = :CDCAIXA
                                AND ((:FINAL = 1 AND TO_CHAR(DTABERCAIX, 'YYYY-MM-DD') = :DTABERCAIX)
                                  OR (:FINAL <> 1 AND DTABERCAIX = :DTABERCAIX))
                                AND IDTIPOMOVIVE = 'S'
                            GROUP BY CDFILIAL, CDCAIXA, DTABERCAIX, CDTIPORECE, NRSEQVENDA) S
                          ON E.CDTIPORECE = S.CDTIPORECE
                        AND E.NRSEQVENDA = S.NRSEQVENDA
          WHERE E.CDFILIAL    = :CDFILIAL
            AND E.CDCAIXA     = :CDCAIXA
        GROUP BY T.CDTIPORECE, T.NMTIPORECE) RC
    ";

    const TOTAL_VENDAS = "
        SELECT
            PR.CDARVPROD AS CDPRODUTO, IT.VRUNITVEND,IT.VRUNITVENDCL,
            NVL(PR.NMPRODIMPFIS,PR.NMPRODUTO) AS NMPRODUTO,
            AL.VRPEALIMPFIS, IM.IDTPIMPOSFIS,
            SUM(QTPRODVEND) AS QTPRODVEND,
            SUM(ROUND((IT.QTPRODVEND * (IT.VRUNITVEND + NVL(IT.VRUNITVENDCL,0))),2)) AS VRPRODUTO,
            SUM(ROUND((IT.QTPRODVEND * (IT.VRUNITVEND + NVL(IT.VRUNITVENDCL,0))),2) - NVL(IT.VRDESITVEND ,0) + NVL(IT.VRACRITVEND,0)) AS VRTOTAL,
            SUM(VRACRITVEND) AS VRACRE, SUM(VRDESITVEND) AS VRDESC, CDPRODIMPFIS
        FROM
            LOJA LO, VENDA VE, PRODUTO PR, ITEMVENDA IT, ALIQIMPFIS AL, IMPOSTO IM
        WHERE
                (VE.CDFILIALTUR = :P_CDFILIAL  )
            AND (VE.CDCAIXATUR  = :P_CDCAIXA   )
            AND (VE.DTABERTUR   = :P_DTABERCAIX)
            AND (VE.CDFILIALTUR = IT.CDFILIAL  )
            AND (VE.CDCAIXATUR  = IT.CDCAIXA   )
            AND (VE.NRSEQVENDA  = IT.NRSEQVENDA)
            AND (IT.CDPRODUTO   = PR.CDPRODUTO )
            AND (VE.CDFILIAL    = AL.CDFILIAL  )
            AND (IT.CDPRODUTO   = AL.CDPRODUTO )
            AND (IM.CDIMPOSTO   = AL.CDIMPOSTO )
            AND (LO.CDFILIAL    = VE.CDFILIAL  )
            AND (LO.CDLOJA      = VE.CDLOJA    )
            AND (VE.IDSITUVENDA = 'O')
        GROUP BY
            PR.CDARVPROD, IT.VRUNITVEND, IT.VRUNITVENDCL ,NVL(PR.NMPRODIMPFIS,PR.NMPRODUTO), AL.VRPEALIMPFIS, IM.IDTPIMPOSFIS, CDPRODIMPFIS
    ";

    const GET_LAST_SALE = "
	    SELECT VR.CDCLIENTE, VR.CDCONSUMIDOR, VR.CDFILIAL, CV.NRCOMANDA, VR.NRVENDAREST,
               TO_CHAR(VR.DTHRABERMESA, 'DD/MM/YYYY HH24:MI') AS DTVENDA,
               CV.IDSTCOMANDA, CV.IDRETBALLOJA, CV.VRACRCOMANDA, CV.VRDESCOMANDA,
               M.CDMUNICIBGE, 'BR' CDPAIS , CV.SGESTADO, CV.DSENDECONSCOMAN, CV.DSCOMPLENDCOCOM, CV.NRCEPCONSCOMAND,
               CV.DSREFENDCONSCOM, CV.DSBAIRRO,
               CASE CV.IDSTCOMANDA
                    WHEN '1' THEN 1
                    ELSE 0
               END AS ISOPEN

                FROM COMANDAVEN CV
                JOIN VENDAREST VR
                    ON CV.CDFILIAL    = VR.CDFILIAL
                AND CV.NRVENDAREST = VR.NRVENDAREST

            LEFT JOIN MUNICIPIO M
                    ON CV.CDMUNICIPIO = M.CDMUNICIPIO
                AND CV.SGESTADO    = M.SGESTADO
                AND CV.CDPAIS      = M.CDPAIS


                WHERE CV.NRCOMANDAEXT = :NRCOMANDAEXT

            ORDER BY VR.DTHRABERMESA DESC
    ";

    const GET_CONSUMER_BY_ID = "
        SELECT CO.CDCONSUMIDOR, CO.NRCPFRESPCON, CO.CDCLIENTE, CO.IDTPVENDACONS,
              CO.NMCONSUMIDOR, CO.DSEMAILCONS, TO_CHAR(CO.DTNASCCONS, 'DD/MM/YYYY') AS DTNASCCONS,
              CO.IDSEXOCONS, CO.IDSITCONSUMI AS IDATIVO, CO.NRCEPCONS, CO.DSENDECONS, CO.NRENDECONS,
              MU.CDMUNICIBGE, MU.CDMUNICIPIO, CO.SGESTADO, PA.NMPAIS, CO.DSCOMPLENDECONS, PA.CDPAIS,
              BA.NMBAIRRO, CO.NRTELECONS, CO.NRCELULARCONS, 1 AS ISPRINCIPAL, BA.CDBAIRRO, CO.DSREFERENDECONS

            FROM CONSUMIDOR CO

          LEFT JOIN PAIS PA
              ON CO.CDPAIS      = PA.CDPAIS

            LEFT JOIN BAIRRO BA
              ON CO.CDPAIS      = BA.CDPAIS
            AND CO.SGESTADO    = BA.SGESTADO
            AND CO.CDMUNICIPIO = BA.CDMUNICIPIO
            AND CO.CDBAIRRO    = BA.CDBAIRRO

          LEFT JOIN MUNICIPIO MU
              ON CO.CDPAIS      = MU.CDPAIS
            AND CO.SGESTADO    = MU.SGESTADO
            AND CO.CDMUNICIPIO = MU.CDMUNICIPIO

          WHERE CDCONSUMIDOR = :CDCONSUMIDOR
          AND CDCLIENTE = :CDCLIENTE
            AND DTULTATUCSUM IN (SELECT MAX(DTULTATUCSUM)
                                    FROM CONSUMIDOR
                        WHERE CDCONSUMIDOR = :CDCONSUMIDOR
                        AND :CDCLIENTE = :CDCLIENTE)
	";

    const GET_TANQUEBICOH_BY_BICO = "
        SELECT TB.CDALMOXARIFE AS CDALMOXARIFADO , TB.CDFILIAL AS CDFILIALALMOXARIFADO
        FROM (
            SELECT MIN(TO_DATE(:DTABASTECIMENTO,'DD/MM/YY HH24:MI:SS') - DTATIVACAO) AS DATEDIFF, NRSEQBICO
                FROM VND_TANQUEBICOH
            WHERE NRSEQBICO = :NRSEQBICO
                AND TO_DATE(:DTABASTECIMENTO,'DD/MM/YY HH24:MI:SS') >= DTATIVACAO
            GROUP BY NRSEQBICO
        ) DIFFS, VND_TANQUEBICOH TB
        WHERE DIFFS.NRSEQBICO = TB.NRSEQBICO
        AND (TO_DATE(:DTABASTECIMENTO,'DD/MM/YY HH24:MI:SS') - TB.DTATIVACAO) = DIFFS.DATEDIFF
    ";

    const GET_MAX_ITLANCTOEST = "
        SELECT LPAD(TRUNC(MAX(NRSEQUITEM)+1),4,0) PROXNRSEQUITEM
          FROM ITLANCTOEST
        WHERE NRORG      = :NRORG
          AND CDFILIAL   = :CDFILIAL
          AND NRLANCESTQ = :NRLANCESTQ
    ";

    const GET_INFO_PAYMENT_NFCE = "
		SELECT TR.NMTIPORECE, TR.IDTIPORECE, MC.IDTIPOMOVIVE, SUM(MC.VRMOVIVEND) AS VRMOVIVEND, X.*
  		  FROM MOVCAIXA MC, TIPORECE TR, (SELECT COUNT(*) AS QTDEITENS,
                        SUM(TRUNC(IV.QTPRODVEND*(IV.VRUNITVEND+IV.VRUNITVENDCL),2)+CASE IV.CDPRODUTO WHEN LO.CDPRODTAXASERV THEN IV.VRACRITVEND ELSE 0 END) AS VRTOTITEM,
                        SUM(CASE IV.CDPRODUTO WHEN LO.CDPRODTAXASERV THEN 0 ELSE IV.VRACRITVEND END) AS VRTOTACRE,
                        SUM(IV.VRDESITVEND) AS VRTOTDESC,
                        NVL(VE.VRTXSEVENDA,0) AS VRTXSEVENDA
                  FROM VENDA VE, ITEMVENDA IV, LOJA LO
                  WHERE VE.CDFILIAL   = :CDFILIAL
                    AND VE.CDCAIXA    = :CDCAIXA
                    AND VE.NRSEQVENDA = :NRSEQVENDA
                    AND IV.CDFILIAL   = VE.CDFILIAL
                    AND IV.CDCAIXA    = VE.CDCAIXA
                    AND IV.NRSEQVENDA = VE.NRSEQVENDA
                    AND VE.CDFILIAL   = LO.CDFILIAL
                    AND VE.CDLOJA     = LO.CDLOJA
                  GROUP BY VE.VRTXSEVENDA )X
          WHERE MC.CDFILIAL   = :CDFILIAL
            AND MC.CDCAIXA    = :CDCAIXA
            AND MC.NRSEQVENDA = :NRSEQVENDA
            AND TR.CDTIPORECE = MC.CDTIPORECE
          GROUP BY TR.NMTIPORECE, TR.IDTIPORECE, MC.IDTIPOMOVIVE,
                   X.QTDEITENS, X.VRTOTITEM, X.VRTOTACRE, X.VRTOTDESC, X.VRTXSEVENDA
    ";

    const BUSCA_OBSERVACOES = "
                SELECT DISTINCT PR.CDOCORR, OC.DSOCORR, '#' || OC.NRCORSINAL AS NRCORSINAL, GR.CDGRPOCOR,
               OC.IDCONTROLAOBS, OC.DSENDEIMGOCORR, OC.CDPRODUTO, OC.IDCONTROLAOBS,
               OC.DSAPELIDOOBS, OC.IDEXIOBSAPPCONS, OCO.CDGRUPOOBRIG, GRO.NMGRUPOBRIG
          FROM GRUPOCOR GR JOIN PRODOCORRE PR
                             ON GR.CDGRPOCOR = PR.CDGRPOCOR
                           JOIN LOJA LJ
                             ON GR.CDGRPOCOR = LJ.CDGRPOCORPED
                           JOIN OCORRENCIA OC
                             ON PR.CDGRPOCOR = OC.CDGRPOCOR
                            AND PR.CDOCORR   = OC.CDOCORR
                            JOIN GRUPOBRIGOCOR GRO
                                   ON GRO.CDGRPOCOR = PR.CDGRPOCOR
                            JOIN PRODOBRIGOCOR OCO
                                   ON OCO.CDGRPOCOR    = PR.CDGRPOCOR
                                  AND OCO.CDOCORR      = PR.CDOCORR
                                  AND OCO.CDGRUPOOBRIG = GRO.CDGRUPOOBRIG
         WHERE LJ.CDFILIAL = :CDFILIAL
           AND LJ.CDLOJA   = :CDLOJA
           AND NVL(OC.CDPRODUTO, 'NOTHING') NOT IN (SELECT CDPRODUTO
                                                      FROM PRODBLOQVND
                                                     WHERE CDFILIAL = :CDFILIAL
                                                       AND CDLOJA = :CDLOJA
                                                       AND (NRDIASEMANABLOQ = 'T' OR NRDIASEMANABLOQ = :NRDIASEMANABLOQ))
        UNION
        SELECT DISTINCT PR.CDOCORR, OC.DSOCORR, '#' || OC.NRCORSINAL AS NRCORSINAL, GR.CDGRPOCOR,
               OC.IDCONTROLAOBS, OC.DSENDEIMGOCORR, OC.CDPRODUTO, OC.IDCONTROLAOBS,
               OC.DSAPELIDOOBS, OC.IDEXIOBSAPPCONS, null as CDGRUPOOBRIG, null as NMGRUPOBRIG
          FROM GRUPOCOR GR JOIN PRODOCORRE PR
                             ON GR.CDGRPOCOR = PR.CDGRPOCOR
                           JOIN LOJA LJ
                             ON GR.CDGRPOCOR = LJ.CDGRPOCORPED
                           JOIN OCORRENCIA OC
                             ON PR.CDGRPOCOR = OC.CDGRPOCOR
                            AND PR.CDOCORR   = OC.CDOCORR
         WHERE OC.CDGRPOCOR||PR.CDOCORR NOT IN (SELECT CDGRPOCOR||CDOCORR FROM PRODOBRIGOCOR)
           AND LJ.CDFILIAL = :CDFILIAL
           AND LJ.CDLOJA   = :CDLOJA
           AND NVL(OC.CDPRODUTO, 'NOTHING') NOT IN (SELECT CDPRODUTO
                                                      FROM PRODBLOQVND
                                                     WHERE CDFILIAL = :CDFILIAL
                                                       AND CDLOJA = :CDLOJA
                                                       AND (NRDIASEMANABLOQ = 'T' OR NRDIASEMANABLOQ = :NRDIASEMANABLOQ))

    ";

    const SQL_PRECOS = "
        SELECT CDPRODUTO, VRPRECITEM, NVL(VRPRECITEMCL, 0) AS VRPRECITEMCL,
               HRINIVENPROD, HRFIMVENPROD, 0 AS VRDESITVEND, 0 AS VRACRITVEND
          FROM ITEMPRECO
         WHERE CDFILIAL = :CDFILIAL
           AND CDTABEPREC = :CDTABEPREC
           AND DTINIVGPREC = TRUNC(TO_DATE(:DTINIVGPREC, 'DD-MM-YYYY HH24:MI:SS'))
    ";

    const SQL_PRECOS_DIA = "
        SELECT VRPRECODIA, IDPERVALORPR, IDDESCACREPR, IDVISUACUPOM, CDTIPOCONSPD, CDPRODUTO
          FROM ITEMPRECODIA
         WHERE CDFILIAL       = :CDFILIAL
           AND CDTABEPREC     = :CDTABEPREC
           AND DTINIVGPREC    = TO_DATE(:DTINIVGPREC, 'DD/MM/YYYY HH:MI:SS')
           AND ((NRDIASEMANPR = :NRDIASEMANPR) OR (NRDIASEMANPR = 'T'))
           AND TO_CHAR(SYSDATE,'HH24')||'00' BETWEEN HRINIPRECDIA AND HRFINPRECDIA
           AND CDTIPOCONSPD = :CDTIPOCONSPD
    ";

    const TABELA_VENDA = "
        SELECT TO_CHAR(A.DTINIVGPREC, 'DD-MM-YYYY HH:MI:SS') AS DTINIVGPREC FROM (
            SELECT TO_TIMESTAMP(TO_CHAR(DTINIVGPREC, 'DD-MM-YYYY HH:MI:SS'), 'DD-MM-YYYY HH:MI:SS') AS DTINIVGPREC
              FROM TABEVEND
             WHERE CDFILIAL   = :CDFILIAL
               AND CDTABEPREC = :CDTABEPREC
               AND SYSDATE BETWEEN DTINIVGPREC AND DTFINVGPREC
        ) A
    ";

    const ITEM_PRECO = "
        SELECT NVL(I.VRPRECITEM, 0) AS PRECO,
               NVL(I.VRPRECITEMCL, 0) AS PRECOCLIE,
               NVL(I.VRPRESUGITEM, 0) AS PRECOSUGER,
               I.IDPRECVARIA, P.NMPRODUTO, I.HRINIVENPROD, I.HRFIMVENPROD
          FROM ITEMPRECO I JOIN PRODUTO P
                             ON I.CDPRODUTO = P.CDPRODUTO
         WHERE I.CDFILIAL = :CDFILIAL
           AND I.CDTABEPREC = :CDTABEPREC
           AND DTINIVGPREC = TO_DATE(:DTINIVGPREC, 'DD/MM/YYYY HH:MI:SS')
           AND I.CDPRODUTO = :CDPRODUTO
    ";

    const ITEM_PRECO_DIA = "
        SELECT VRPRECODIA, IDPERVALORPR, IDDESCACREPR, IDVISUACUPOM, CDTIPOCONSPD
          FROM ITEMPRECODIA
          WHERE CDFILIAL     = :CDFILIAL
            AND CDTABEPREC   = :CDTABEPREC
            AND DTINIVGPREC  = TO_DATE(:DTINIVGPREC, 'DD/MM/YYYY HH:MI:SS')
            AND CDPRODUTO    = :CDPRODUTO
            AND CDPRPAITABPR = :CDPRPAITABPR
            AND NRDIASEMANPR = :NRDIASEMANPR
            AND CDTIPOCONSPD = :CDTIPOCONSPD
            AND TO_CHAR(SYSDATE,'HH24')||'00' BETWEEN HRINIPRECDIA AND HRFINPRECDIA
    ";

    const ATUALIZA_VENDA_SAT = "
        UPDATE VENDA
           SET IDSTATUSNFCE = :IDSTATUSNFCE,
               DSQRCODENFCE = :DSQRCODENFCE,
               NRACESSONFCE = :NRACESSONFCE,
               NRNOTAFISCALCE = :NRNOTAFISCALCE,
               NRLANCTONFCE = :NRLANCTONFCE,
               DSARQXMLNFCE = :DSARQXMLNFCE,
               CDSERIESAT = :CDSERIESAT,
               IDTPAMBNFCE = :IDTPAMBNFCE,
               DTEMISSAONFCE = :DTEMISSAONFCE,
               CDOPERULTATU = :CDOPERULTATU,
               NRORGULTATU = :NRORG
         WHERE CDFILIAL = :CDFILIAL
           AND CDCAIXA = :CDCAIXA
           AND NRSEQVENDA = :NRSEQVENDA
           AND NRORG = :NRORG
    ";

    const GET_SALDOCONSUMIDOR = "
   		SELECT CDCLIENTE, CDCONSUMIDOR, VRSALDOCONS
   		  FROM MOVICLIE
   		 WHERE NRSEQMOVCLI IN (SELECT MAX(NRSEQMOVCLI)
   		                         FROM MOVICLIE
   		                        WHERE (INSTR(:CDCLIENTE, MOVICLIE.CDCLIENTE ) > 0)
   		                       GROUP BY CDCLIENTE)
   		   AND (INSTR(:CDCLIENTE, MOVICLIE.CDCLIENTE) > 0)
   		GROUP BY CDCLIENTE, CDCONSUMIDOR, VRSALDOCONS
    ";

    const VERIFICA_FECHAMENTO_CAIXA = "
        SELECT DTMOVTURCAIX
          FROM TURCAIXA
         WHERE CDFILIAL = :CDFILIAL
           AND CDCAIXA = :CDCAIXA
           AND DTFECHCAIX IS NULL
           AND TO_CHAR(DTMOVTURCAIX, 'DD/MM/YY') = TO_CHAR(SYSDATE, 'DD/MM/YY')
    ";

    const EXECUTE_NOVO_CODIGO = "
        EXECUTE NOVO_CODIGO @P_CONTADOR = :CDCONTADOR, @P_SEQUENCIAL = '', @P_QTDE = :QTDE, @P_NRORG = :NRORG
    ";

    const INSERT_MOVCAIXA_OPENPOS = "
        INSERT INTO MOVCAIXA
        (CDFILIAL, CDCAIXA, DTABERCAIX, NRSEQUMOVI,
        NRSEQUMOVIMSDE, DTHRINCMOV, IDTIPOMOVIVE, VRMOVIVEND,
        CDTIPORECE, DTMOVIMCAIXA, NRORG)
        VALUES
        (:CDFILIAL, :CDCAIXA, :DTABERCAIX, :NRSEQUMOVI,
        :NRSEQUMOVIMSDE, :DTHRINCMOV, :IDTIPOMOVIVE, :VRMOVIVEND,
        :CDTIPORECE, :DTMOVIMCAIXA, :NRORG)
    ";

    const INSERT_COMANDAVEN = "
      INSERT INTO COMANDAVEN (
        CDFILIAL, NRVENDAREST, NRCOMANDA, CDLOJA,
        DSCOMANDA, IDSTCOMANDA, SGSEXOCON, TXMOTIVCANCE,
        VRACRCOMANDA, CDPAIS, SGESTADO, CDMUNICIPIO,
        NRCEPCONSCOMAND, CDBAIRRO, DSBAIRRO, DSENDECONSCOMAN,
        DSCOMPLENDCOCOM, DSREFENDCONSCOM, IDORGCMDVENDA,
        IDRETBALLOJA, NRCOMANDAEXT, IDSINCAGENDA, DTHRAGENDADA, IDCOMANDAPAGA,
        CDCAMPANHA, VRPONTOBRINDE, VRDESCFIDELIDAD, DSCUPOMPROMO, IDEXTCONSAPP
      )
      VALUES (
        :CDFILIAL, :NRVENDAREST, :NRCOMANDA, :CDLOJA,
        :DSCOMANDA, :IDSTCOMANDA, :SGSEXOCON, :TXMOTIVCANCE,
        :VRACRCOMANDA, :CDPAIS, :SGESTADO, :CDMUNICIPIO,
        :NRCEPCONSCOMAND, :CDBAIRRO, :DSBAIRRO, :DSENDECONSCOMAN,
        :DSCOMPLENDCOCOM, :DSREFENDCONSCOM, :IDORGCMDVENDA,
        :IDRETBALLOJA, :NRCOMANDAEXT, :IDSINCAGENDA, TO_DATE(:DTHRAGENDADA, 'DD/MM/YYYY HH24:MI:SS'), :IDCOMANDAPAGA,
        :CDCAMPANHA, :VRPONTOBRINDE, :VRDESCFIDELIDAD, :DSCUPOMPROMO, :IDEXTCONSAPP
      )
    ";

    const INSERT_VENDAREST = "
        INSERT INTO VENDAREST (
            CDFILIAL, NRVENDAREST, CDLOJA, NRMESA, CDVENDEDOR,
            DTHRABERMESA, DTHRFECHMESA, CDOPERADOR, NRPESMESAVEN,
            CDCLIENTE, CDCONSUMIDOR, IDPEDIDOPAGO
        )
        VALUES (
            :CDFILIAL, :NRVENDAREST, :CDLOJA, :NRMESA,
            :CDVENDEDOR, SYSDATE, null, :CDOPERADOR,
            :NRPESMESAVEN, :CDCLIENTE, :CDCONSUMIDOR, :IDPEDIDOPAGO
        )
    ";

    const GET_SALES_TABLE = "
      SELECT TO_CHAR(DTINIVGPREC, 'DD/MM/YYYY') AS DTINIVGPREC, DTINIVGPREC AS ORIGINAL
      FROM TABEVEND
      WHERE CDFILIAL = :CDFILIAL
      AND CDTABEPREC = :CDTABEPREC
      AND (SYSDATE BETWEEN DTINIVGPREC AND DTFINVGPREC)
    ";

    const GET_ITEM_PRICE = "
      SELECT NVL(VRPRECITEM, 0) AS PRECO,
        NVL(VRPRECITEMCL, 0) AS PRECOCLIE,
        NVL(VRPRESUGITEM, 0) AS PRECOSUGER, IDPRECVARIA
      FROM ITEMPRECO
      WHERE CDFILIAL  = :CDFILIAL
      AND CDTABEPREC  = :CDTABEPREC
      AND DTINIVGPREC = TO_DATE(:DATAVIG,'DD/MM/YYYY')
      AND CDPRODUTO   = :CDPRODUTO
      ORDER BY CDPRODUTO
    ";

    const GET_SMARTPROMO_PRICE = "
      SELECT NVL(IT.VRPRECITEM, 0) AS PRECO,
        DPP.IDPERVALORDES AS TIPO,
        DPP.VRDESPRODPROMOC AS VRDESC,
        0 AS ACRE
      FROM PRODGRUPROMOC PGP
      JOIN GRUPROMOCPROD GPP
        ON (PGP.CDGRUPROMOC = GPP.CDGRUPROMOC)
      JOIN PRODUTO P
        ON (PGP.CDPRODUTO = P.CDPRODUTO)
      JOIN ITEMPRECO IT
        ON (PGP.CDPRODUTO = IT.CDPRODUTO) AND
        (IT.CDPRODUTO = P.CDPRODUTO)
      LEFT JOIN DESGRUPROMOCPR DPP
        ON (PGP.CDGRUPROMOC = DPP.CDGRUPROMOC) AND
        (PGP.CDPRODUTO = DPP.CDPRODUTO) AND
        (GPP.CDPRODPROMOCAO = DPP.CDPRODPROMOCAO)
      WHERE (GPP.CDPRODPROMOCAO = :CDPRODPROMOCAO) AND
        (PGP.CDGRUPROMOC = :CDGRUPROMOC) AND
        (IT.CDPRODUTO = :CDPRODUTO) AND
        (IT.CDFILIAL = :CDFILIAL) AND
        (IT.CDTABEPREC = :CDTABEPREC) AND
        (IT.DTINIVGPREC = :DTINIVGPREC)
        ORDER BY DPP.NRORDPROMOPR
    ";

    const GET_NRTRANSACOES = "
        SELECT COUNT(DISTINCT(V.NRSEQVENDA)) AS NRTRANSACOES
          FROM VENDA V
        WHERE (V.CDFILIAL = :CDFILIAL)
          AND (V.CDCAIXA = :CDCAIXA)
          AND ((:FINAL = 1 AND TO_CHAR(V.DTABERTUR, 'YYYY-MM-DD') = :DTABERCAIX)
            OR (:FINAL <> 1 AND V.DTABERTUR = :DTABERCAIX))
          AND (V.IDSITUVENDA = 'O')
    ";

    const GET_NRPRIMSEQ = "
        SELECT MIN(NVL(NRNOTAFISCALCE, 0)) AS NRPRIMSEQ
          FROM VENDA
        WHERE CDFILIAL = :CDFILIAL
          AND CDCAIXA = :CDCAIXA
          AND ((:FINAL = 1 AND TO_CHAR(DTABERTUR, 'YYYY-MM-DD') = :DTABERCAIX)
            OR (:FINAL <> 1 AND DTABERTUR = :DTABERCAIX))
    ";

    const GET_NRFINALSEQ = "
        SELECT MAX(NVL(NRNOTAFISCALCE, 0)) AS NRFINALSEQ
          FROM VENDA
        WHERE CDFILIAL = :CDFILIAL
          AND CDCAIXA = :CDCAIXA
          AND ((:FINAL = 1 AND TO_CHAR(DTABERTUR, 'YYYY-MM-DD') = :DTABERCAIX)
            OR (:FINAL <> 1 AND DTABERTUR = :DTABERCAIX))
    ";

    const GET_ITENS_CANCELADOS = "
        SELECT SUM(ROUND(I.QTPRODVENDC*(I.VRUNITVENDC+I.VRUNITVENCLC)+NVL(I.VRACRITVENDC, 0), 2)) AS VRCANCEL
          FROM VENDA V, ITVENDACAN I
        WHERE V.CDFILIAL = :CDFILIAL
          AND V.CDCAIXA = :CDCAIXA
          AND ((:FINAL = 1 AND TO_CHAR(V.DTABERTUR, 'YYYY-MM-DD') = :DTABERCAIX)
          OR (:FINAL <> 1 AND V.DTABERTUR = :DTABERCAIX))
          AND V.CDFILIAL = I.CDFILIAL
          AND V.CDCAIXA = I.CDCAIXA
          AND V.NRSEQVENDA = I.NRSEQVENDA
    ";

    const TOTAL_CREDITO = "
        SELECT SUM(ROUND(E.VRMOVEXTCONS,2)) AS VRCREDITO
          FROM EXTRATOCONS E
        WHERE (E.CDFILIAL = :CDFILIAL)
          AND (E.CDCAIXA = :CDCAIXA)
          AND (E.IDTPMOVEXT = 'C')
          AND ((:FINAL = 1 AND TO_CHAR(E.DTABERCAIX, 'YYYY-MM-DD') = :DTABERCAIX)
            OR (:FINAL <> 1 AND E.DTABERCAIX = :DTABERCAIX))
    ";

    const GET_IMPOSTOS = "
        SELECT SGIMPOSTO, P.VRPEALPRODIT,
          SUM((QTPRODVEND*VRUNITVEND)-NVL(VRDESITVEND, 0)+NVL(VRACRITVEND, 0)) AS VRBASE,
          SUM(((QTPRODVEND*VRUNITVEND)-NVL(VRDESITVEND, 0)+NVL(VRACRITVEND, 0))/100*P.VRPEALPRODIT) AS VRIMPOSTO
        FROM ITEMVENDA I JOIN VENDA V
                        ON I.CDFILIAL   = V.CDFILIAL
                      AND I.CDCAIXA    = V.CDCAIXA
                      AND I.NRSEQVENDA = V.NRSEQVENDA
                      JOIN ITVENDAIMPOS P
                        ON I.CDFILIAL     = P.CDFILIAL
                      AND I.CDCAIXA      = P.CDCAIXA
                      AND I.NRSEQVENDA   = P.NRSEQVENDA
                      AND I.NRSEQUITVEND = P.NRSEQUITVEND
                      JOIN IMPOSTO IM
                        ON P.CDIMPOSTO = IM.CDIMPOSTO
      WHERE I.CDFILIAL = :CDFILIAL
        AND I.CDCAIXA  = :CDCAIXA
        AND (V.DTENTRVENDA = :DTABERCAIX)
        AND V.IDSITUVENDA = 'O'
      GROUP BY SGIMPOSTO, P.VRPEALPRODIT
    ";

    const UPDATE_VENDA_NFCE = "
        UPDATE VENDA
          SET CDSERIENFCE = :CDSERIENFCE,
            IDTPAMBNFCE = :IDTPAMBNFCE,
            NRACESSONFCE = :NRACESSONFCE,
            NRNOTAFISCALCE = :NRNOTAFISCALCE,
            NRLANCTONFCE = :NRLANCTONFCE,
            IDSITUVENDA = :IDSITUVENDA,
            IDSTATUSNFCE = :IDSTATUSNFCE,
            DTEMISSAONFCE = :DTEMISSAONFCE,
            NRPROTOCOLONFCE = :NRPROTOCOLONFCE,
            DSOBSSTATUSNFCE = :DSOBSSTATUSNFCE,
            IDMODOPERACNFCE = :IDMODOPERACNFCE,
            NRRECIBONFCE = :NRRECIBONFCE,
            CDOPERENVIONFCE = :CDOPERENVIONFCE,
            DTHRPROTOCONFCE = :DTHRPROTOCONFCE,
            IDXMLVALIDNFCE = :IDXMLVALIDNFCE,
            DSQRCODENFCE = :DSQRCODENFCE,
            DSARQXMLNFCE = :DSARQXMLNFCE,
            CDVERSXMLNFCVND = :CDVERSXMLNFCVND
        WHERE NRORG = :NRORG
            AND NRSEQVENDA = :NRSEQVENDA
            AND CDFILIAL = :CDFILIAL
            AND CDCAIXA = :CDCAIXA
    ";

    const BUSCA_RECEBIMENTOS = "
        SELECT T.DSIMPFISCAL, T.NMTIPORECE, M.VRMOVIVEND, M.IDTIPOMOVIVE
          FROM MOVCAIXA M JOIN TIPORECE T
                            ON M.CDTIPORECE = T.CDTIPORECE
         WHERE M.CDFILIAL = :CDFILIAL
           AND M.CDCAIXA = :CDCAIXA
           AND M.DTABERCAIX = TO_DATE(:DTABERCAIX, 'YYYY-MM-DD HH24:MI:SS')
           AND M.NRSEQVENDA = :NRSEQVENDA
           AND M.NRORG = :NRORG
           AND M.IDTIPOMOVIVE IN ('E', 'S')
    ";

    const GET_TOTAL_VENDA_CREDITO_PESSOAL = "
        SELECT
        SUM(VRMOVEXTCONS) AS SUMEXTRATOCONS
        FROM EXTRATOCONS
        WHERE IDTPMOVEXT = 'V'
        AND CAST(DTMOVEXTCONS AS DATE) = CAST(SYSDATE AS DATE)
        AND CDCONSUMIDOR = :CDCONSUMIDOR
        AND CDCLIENTE = :CDCLIENTE
        AND CDFAMILISALD = :CDFAMILISALD
        AND CDFILIAL = :CDFILIAL
    ";

    const PRODUTO_CONSUMIDO_DIA = "
        SELECT SUM(QTPRODVEND) AS PRODUTO_DIA
        FROM ITEMVENDA IT
        JOIN VENDA V ON V.NRSEQVENDA = IT.NRSEQVENDA
        WHERE V.CDCLIENTE = :CDCLIENTE
        AND V.CDCONSUMIDOR = :CDCONSUMIDOR
        AND V.DTENTRVENDA = CAST(SYSDATE AS date)
        AND IT.CDPRODUTO = :CDPRODUTO
        AND IT.CDFILIAL = :CDFILIAL
        AND IT.CDCAIXA = :CDCAIXA
    ";

    const SQL_BUSCA_CARTOES = "
        SELECT C.CDCLIENTE || '-' || C.CDCONSUMIDOR || '-' || NVL(C.CDFAMILISALD, '') AS ID,
               C.CDCLIENTE, C.NMFANTCLIE, C.CDCONSUMIDOR, C.NMCONSUMIDOR,
               C.CDIDCONSUMID, NVL(E.VRSALDCONEXT,0) AS VRSALDCONEXT, C.IDSITCONSUMI,
               C.CDFAMILISALD, FA.NMFAMILISALD, C.IDPERTRANSALD, C.CDTIPOCONS, C.NMTIPOCONS
          FROM EXTRATOCONS E
         RIGHT JOIN (SELECT MAX(DTMOVEXTCONS) AS DTMOVEXTCONS, C.CDCLIENTE, C.CDIDCONSUMID,
                            C.CDCONSUMIDOR, C.NMCONSUMIDOR, C.NMFANTCLIE, E.CDFAMILISALD,
                            C.IDPERTRANSALD, C.CDTIPOCONS, C.NMTIPOCONS, C.IDSITCONSUMI
                       FROM EXTRATOCONS E
                      RIGHT JOIN (SELECT CO.CDCLIENTE, CO.CDCONSUMIDOR, CO.NMCONSUMIDOR, CO.CDIDCONSUMID,
                                         CL.NMFANTCLIE, TC.IDPERTRANSALD, CO.CDTIPOCONS, TC.NMTIPOCONS,
                                         CO.IDSITCONSUMI
                                    FROM CONSUMIDOR CO
                                    JOIN CLIENTE CL ON CO.CDCLIENTE = CL.CDCLIENTE
                                    LEFT JOIN TIPOCONS TC ON CO.CDTIPOCONS = TC.CDTIPOCONS
                                   WHERE (CDIDCONSUMID = :SEARCH_VALUE OR CDEXCONSUMID = :SEARCH_VALUE)
                                 ) C ON E.CDCLIENTE = C.CDCLIENTE
                                    AND E.CDCONSUMIDOR = C.CDCONSUMIDOR
                      GROUP BY C.CDCLIENTE, C.CDIDCONSUMID, C.NMCONSUMIDOR, C.CDCONSUMIDOR, C.NMFANTCLIE,
                               E.CDFAMILISALD, C.IDPERTRANSALD, C.CDTIPOCONS, C.NMTIPOCONS, C.IDSITCONSUMI
                    ) C ON E.CDCLIENTE    = C.CDCLIENTE
                       AND E.CDCONSUMIDOR = C.CDCONSUMIDOR
                       AND E.DTMOVEXTCONS = C.DTMOVEXTCONS
                       AND E.CDFAMILISALD = C.CDFAMILISALD
                       AND E.NRSEQMOVEXT  = (SELECT MAX(NRSEQMOVEXT) AS NRSEQMOVEXT
                                               FROM EXTRATOCONS
                                              WHERE CDCLIENTE    = C.CDCLIENTE
                                                AND CDCONSUMIDOR = C.CDCONSUMIDOR
                                                AND DTMOVEXTCONS = C.DTMOVEXTCONS
                                                AND CDFAMILISALD = C.CDFAMILISALD)
          LEFT JOIN FAMILIASALDO FA ON E.CDFAMILISALD = FA.CDFAMILISALD
    ";

    const BUSCA_DATA_ULTIMA_VENDA = "
        SELECT V.CDFILIAL, V.CDCAIXA, V.NRNOTAFISCALCE, V.DTVENDA,
            V.CDSERIENFCE,V.IDTPAMBNFCE,V.IDSTATUSNFCE
        FROM VENDA V
        LEFT JOIN (SELECT MAX(DTVENDA) AS DTVENDA
            FROM VENDA
            WHERE TO_CHAR(DTVENDA, 'YYYY-MM-DD HH24:MI:SS') < :DTABERCAIX
            AND CDFILIAL = :CDFILIAL
            AND CDCAIXA = :CDCAIXA) TEMP ON 1 = 1
        WHERE V.CDFILIAL = :CDFILIAL
        AND V.CDCAIXA = :CDCAIXA
        AND V.IDTPEMISVEND = 'N'
        AND V.IDTPAMBNFCE IS NOT NULL
        AND TO_CHAR(V.DTVENDA, 'YYYY-MM-DD HH24:MI:SS') >= CASE WHEN TO_CHAR(TEMP.DTVENDA, 'YYYY-MM-DD HH24:MI:SS') IS NULL THEN :DTABERCAIX ELSE TO_CHAR(TEMP.DTVENDA, 'YYYY-MM-DD HH24:MI:SS') END
        ORDER BY V.NRNOTAFISCALCE
    ";

    const GET_ULTIMA_VENDA_SAT = "
        SELECT CDFILIAL, CDCAIXA, NRSEQVENDA, DTVENDA, IDIMPVENDA FROM VENDA
            WHERE CDFILIAL=:CDFILIAL
                AND CDCAIXA=:CDCAIXA
                AND NRACESSONFCE LIKE '%' || :NRACESSONFCE || '%'
    ";

    const CHECK_INDEX = "
        SELECT 1 FROM USER_INDEXES WHERE INDEX_NAME = :INDEXNAME
    ";

    const SQL_GET_CONSUMIDOR_SALDO_DEBITO = "
        SELECT NVL(VRSALDOCONS, 0) AS VRSALDOCONS
          FROM MOVICLIE
         WHERE CDCLIENTE    = :CDCLIENTE
           AND CDCONSUMIDOR = :CDCONSUMIDOR
           AND DTMOVCLI     = (SELECT MAX(DTMOVCLI)
                                 FROM MOVICLIE
                                WHERE CDCLIENTE    = :CDCLIENTE
                                  AND CDCONSUMIDOR = :CDCONSUMIDOR)
    ";

    const GET_SANGRIA = "
        SELECT NVL(SUM(M.VRMOVIVEND),0) AS VRSAIDA, T.CDTIPORECE,
          CASE
            WHEN M.IDTIPOMOVIVE = 'U' THEN
              'Suprimento'
            WHEN M.IDTIPOMOVIVE = 'S' AND T.IDTIPORECE = '7' THEN
              'Contra Vale Emitido'
            ELSE
              T.NMTIPORECE
          END AS NMTIPORECE,
          CASE
            WHEN M.IDTIPOMOVIVE = 'G' AND T.IDTIPORECE <> '7' THEN
              '1'
            WHEN M.IDTIPOMOVIVE = 'S' AND T.IDTIPORECE = '7' THEN
              '2'
            WHEN M.IDTIPOMOVIVE = 'U' THEN
              '3'
            WHEN M.IDTIPOMOVIVE = 'G' AND T.IDTIPORECE = '7' THEN
              '4'
            ELSE NULL
          END AS IDTIPOREG,
          M.DTABERCAIX
        FROM MOVCAIXA M
        JOIN TIPORECE T
          ON M.CDTIPORECE = T.CDTIPORECE
        WHERE M.CDFILIAL = :CDFILIAL
          AND M.CDCAIXA = :CDCAIXA
          AND DTABERCAIX = TO_DATE(:DTABERCAIX, 'YYYY-MM-DD HH24:MI:SS')
          AND (M.IDTIPOMOVIVE IN ('G', 'U') OR (M.IDTIPOMOVIVE = 'S' AND T.IDTIPORECE = '7'))
        GROUP BY T.CDTIPORECE, T.NMTIPORECE, T.IDTIPORECE, M.DTABERCAIX, M.IDTIPOMOVIVE
    ";

    const CALCULA_TOTAL_COMANDA = "
      SELECT NRLUGARMESA, SUM(TRUNC((VRPRECCOMVEN + VRPRECCLCOMVEN) * QTPRODCOMVEN, 2) + VRACRCOMVEN - VRDESCCOMVEN) AS TOTAL
          FROM ITCOMANDAVEN
        WHERE CDFILIAL = :CDFILIAL
          AND NRVENDAREST = :NRVENDAREST
          AND NRCOMANDA = :NRCOMANDA
          AND IDSTPRCOMVEN <> 6
        GROUP BY NRLUGARMESA
    ";

    const GET_PRODUCTS_TO_PRINT_NFCE = "
      SELECT IV.NRSEQUITVEND, IV.QTPRODVEND, IV.VRUNITVEND, IV.VRUNITVENDCL,
                 IM.IDTPIMPOSFIS, IP.VRPEALPRODIT, (IV.VRDESITVEND) AS VRTOTDESC,
                 PR.NMPRODUTO, PR.SGUNIDADE, LJ.CDPRODTAXASERV, PR.IDPESAPROD, LJ.CDPRODTAXAENTR,
                 TRUNC((IV.QTPRODVEND*(IV.VRUNITVEND + IV.VRUNITVENDCL)),2) AS VRTOTITEM,
                 (IV.VRACRITVEND- CASE WHEN IV.VRRATTXSERV IS NULL THEN 0 ELSE IV.VRRATTXSERV END) AS VRTOTACRE,
                 CASE WHEN VE.VRTXSEVENDA IS NULL THEN 0 ELSE VE.VRTXSEVENDA END AS VRTXSEVENDA,
                 PR.CDPRODUTO, CASE WHEN PR.CDBARPRODUTO IS NULL THEN PR.CDARVPROD ELSE PR.CDBARPRODUTO END AS CDARVPROD,
                 SUM(CASE MC.IDTIPOMOVIVE
                     WHEN 'E' THEN MC.VRMOVIVEND
                     WHEN 'T' THEN MC.VRMOVIVEND
                     ELSE 0
                      END) AS VRENTRADA,
                 SUM(CASE MC.IDTIPOMOVIVE
                     WHEN 'S' THEN MC.VRMOVIVEND
                     ELSE 0
                      END) AS VRSAIDA
            FROM VENDA VE
            JOIN ITEMVENDA IV ON IV.CDFILIAL   = VE.CDFILIAL
                             AND IV.CDCAIXA    = VE.CDCAIXA
                             AND IV.NRSEQVENDA = VE.NRSEQVENDA

            JOIN PRODUTO PR  ON PR.CDPRODUTO  = IV.CDPRODUTO
            JOIN MOVCAIXA MC ON MC.CDFILIAL   = VE.CDFILIAL
                            AND MC.CDCAIXA    = VE.CDCAIXA
                            AND MC.NRSEQVENDA = VE.NRSEQVENDA
            JOIN ITVENDAIMPOS IP ON IP.CDFILIAL   = VE.CDFILIAL
                                AND IP.CDCAIXA    = VE.CDCAIXA
                                AND IP.NRSEQVENDA = VE.NRSEQVENDA
                                AND IP.NRSEQUITVEND = IV.NRSEQUITVEND
            JOIN IMPOSTO IM ON IM.CDIMPOSTO  = IP.CDIMPOSTO
                JOIN LOJA LJ    ON LJ.CDFILIAL = VE.CDFILIAL
                               AND LJ.CDLOJA = VE.CDLOJA
          WHERE VE.CDFILIAL   = :CDFILIAL
            AND VE.CDCAIXA    = :CDCAIXA
            AND VE.NRSEQVENDA = :NRSEQVENDA
          GROUP BY
            IV.NRSEQUITVEND, IV.QTPRODVEND, IV.VRUNITVEND, IV.VRUNITVENDCL, IV.VRACRITVEND, IV.VRRATTXSERV, IV.VRDESITVEND, VE.VRTXSEVENDA,
            PR.CDPRODUTO, PR.CDBARPRODUTO, PR.CDARVPROD, PR.NMPRODUTO, PR.SGUNIDADE, IM.IDTPIMPOSFIS, IP.VRPEALPRODIT, LJ.CDPRODTAXASERV, PR.IDPESAPROD, LJ.CDPRODTAXAENTR
          ORDER BY
            IV.NRSEQUITVEND
    ";

    const BUSCA_IMPRESSORA_DELIVERY = "
        SELECT IMP.NRSEQIMPRLOJA, I.IDMODEIMPRES, IMP.NMIMPRLOJA, IMP.CDPORTAIMPR, IMP.DSIPPONTE, IMP.DSIPIMPR
            FROM IMPRLOJA IMP,  CAIXA C, IMPRESSORA I
          WHERE IMP.CDFILIAL    = :CDFILIAL
            AND IMP.CDLOJA      = :CDLOJA
            AND C.CDCAIXA       = :CDCAIXA
            AND I.CDIMPRESSORA  = IMP.CDIMPRESSORA
            AND C.CDFILIAL      = IMP.CDFILIAL
            AND C.CDLOJA        = IMP.CDLOJA
            AND NVL(C.NRSEQIMPRLOJA7, NRSEQIMPRLOJA3) = IMP.NRSEQIMPRLOJA
    ";

    const GET_DADOSPRODIMP_XML = "
        SELECT I.CDFILIAL,
            I.CDIMPOSTO, AL.CDCFOPPFIS, P.CDCEST, AL.VRPERCREDUCAO,
            I.CDCAIXA, I.NRSEQVENDA, I.NRSEQUITVEND, I.VRPEALPRODIT, I.VRPERPIS, AL.VRALIQPIS,
            I.VRPERCOFINS, I.CDCSTPRODI, I.CDCSTPRODPC, I.VRBASECALCICMS, P.CDARVPROD,
            P.NMPRODUTO, P.CDCLASFISC, P.SGUNIDADE, I.VRTOTTRIBIBPT, I.VRALIQFCP, I.VRIMPICMSFCP,
            AL.VRPERCREDUCAOEF, AL.VRPEALIMPFISEF, AL.IDTPIMPOSFIS,
            NVL(AL.CDCBENEF, P.CDCBENEF) CDCBENEF, I.VRBASECALCREDUZ
          FROM ITVENDAIMPOS I
            JOIN PRODUTO P
            ON P.CDPRODUTO = :CDPRODUTO
            AND P.NRORG    = I.NRORG
          JOIN ALIQIMPFIS AL
            ON AL.CDPRODUTO    = P.CDPRODUTO
            AND AL.CDFILIAL    = I.CDFILIAL
            AND AL.NRORG       = I.NRORG
          WHERE I.CDFILIAL   = :CDFILIAL
            AND I.CDCAIXA      = :CDCAIXA
            AND I.NRSEQVENDA   = :NRSEQVENDA
            AND I.NRSEQUITVEND = :NRSEQUITVEND
            AND I.NRORG        = :NRORG
      ";

    const GET_DADOSPROD = "
        SELECT P.CDARVPROD, P.NMPRODUTO, P.CDCLASFISC, P.SGUNIDADE,
               NVL(A.CDCBENEF, P.CDCBENEF) CDCBENEF
          FROM PRODUTO P, ALIQIMPFIS A
         WHERE P.NRORG = :NRORG
           AND P.CDPRODUTO = :CDPRODUTO
           AND A.CDFILIAL = :CDFILIAL
           AND A.CDPRODUTO = P.CDPRODUTO
    ";

    const GET_PARAVEND_PRICING_TABLE = "
      SELECT NVL(CDTABEPREC, CDTABEPRECDLV) AS CDTABEPREC, NULL AS CDFILTABPREC
      FROM PARAVEND
      WHERE CDFILIAL = :CDFILIAL
    ";

    const BUSCA_PRODUTO_SUBGRUPO_API = "
        SELECT CDGRUPPROD, CDSUBGRPROD, CDPRODUTO
          FROM PRSUBGRPROD
         WHERE INSTR(:STRPRODUTOS, CDPRODUTO) > 0
    ";

    const SQL_INSERE_VENDAREST = "
			INSERT INTO VENDAREST
					(CDFILIAL, NRVENDAREST, CDLOJA, NRMESA,
					CDVENDEDOR, DTHRABERMESA, CDOPERADOR, NRPESMESAVEN,
					CDCLIENTE, CDCONSUMIDOR, NRPOSICAOMESA, NRORG)
			VALUES
					(:CDFILIAL, :NRVENDAREST, :CDLOJA, :NRMESA,
					:CDVENDEDOR, SYSDATE, :CDOPERADOR, :NRPESMESAVEN,
					:CDCLIENTE, :CDCONSUMIDOR, :NRPOSICAOMESA, :NRORG)
		";

    const BUSCA_ITENS_PEDIDOS = "
        SELECT I.*, P.NMPRODUTO, C.VRCOMISVENDE, P.IDCOBTXSERV,
               TRUNC((I.VRPRECCOMVEN + I.VRPRECCLCOMVEN) * I.QTPRODCOMVEN, 2) + I.VRACRCOMVEN - I.VRDESCCOMVEN AS PRECO
          FROM ITCOMANDAVEN I, PRODUTO P, COMANDAVEN C
        WHERE I.CDFILIAL = :CDFILIAL
          AND I.NRVENDAREST = :NRVENDAREST
          AND I.NRCOMANDA = :NRCOMANDA
          AND I.CDPRODUTO = P.CDPRODUTO
          AND C.CDFILIAL = :CDFILIAL
          AND C.NRVENDAREST = :NRVENDAREST
          AND C.NRCOMANDA = :NRCOMANDA
    ";

    const CHECK_FOR_CONFTELA = "
        SELECT TNAME
          FROM TAB
         WHERE TNAME = 'CONFTELACAIXA'
    ";

    const LOCAL_CERTIFICADO_EXTERNO = "
        SELECT P.FILESERVERURL || SUBSTR(DSDIRCERTIFICADO,
            INSTR(DSDIRCERTIFICADO, '>')+1) DSDIRCERTIFICADO,
            CDSENHACERTIF, DSDIRCERTIFICADO CERTIFICADO
          FROM INSCRESTAD I, PARAMGERAL P
          WHERE I.CDFILIAL = :CDFILIAL
    ";

    const TABELA_VENDA_GERAL = "
        SELECT TO_CHAR(A.DTINIVGPREC, 'DD-MM-YYYY HH:MI:SS') AS DTINIVGPREC FROM (
            SELECT TO_TIMESTAMP(TO_CHAR(DTINIVGPREC, 'DD-MM-YYYY HH:MI:SS'), 'DD-MM-YYYY HH:MI:SS') AS DTINIVGPREC
              FROM TABEVENDGER
             WHERE CDTABEPREC = :CDTABEPREC
               AND SYSDATE BETWEEN DTINIVGPREC AND DTFINVGPREC
        ) A
    ";

    const ITEM_PRECO_GERAL = "
        SELECT NVL(I.VRPRECITEM, 0) AS PRECO,
               NVL(I.VRPRECITEMCL, 0) AS PRECOCLIE,
               NVL(I.VRPRESUGITEM, 0) AS PRECOSUGER,
               I.IDPRECVARIA, P.NMPRODUTO, I.HRINIVENPROD, I.HRFIMVENPROD
          FROM ITEMPRECOGER I JOIN PRODUTO P
                             ON I.CDPRODUTO = P.CDPRODUTO
         WHERE I.CDTABEPREC = :CDTABEPREC
           AND DTINIVGPREC = TO_DATE(:DTINIVGPREC, 'DD/MM/YYYY HH:MI:SS')
           AND I.CDPRODUTO = :CDPRODUTO
    ";

    const ITEM_PRECO_DIA_GERAL = "
        SELECT VRPRECODIA, IDPERVALORPR, IDDESCACREPR, IDVISUACUPOM, CDTIPOCONSPD
          FROM ITEMPRECODIAGER
          WHERE CDTABEPREC   = :CDTABEPREC
            AND DTINIVGPREC  = TO_DATE(:DTINIVGPREC, 'DD/MM/YYYY HH:MI:SS')
            AND CDPRODUTO    = :CDPRODUTO
            AND CDPRPAITABPR = :CDPRPAITABPR
            AND NRDIASEMANPR = :NRDIASEMANPR
            AND CDTIPOCONSPD = :CDTIPOCONSPD
            AND TO_CHAR(SYSDATE,'HH24')||'00' BETWEEN HRINIPRECDIA AND HRFINPRECDIA
    ";

    const CAMPANHA_COMPRE_GANHE = "
        SELECT C.CDCAMPCOMPGANHE, C.QTCOMPGANHE, V.DTINIVGCAMPCG
          FROM CAMPCOMPGANHE C
          JOIN FICAMPCOMPGANHE F
            ON F.CDCAMPCOMPGANHE = C.CDCAMPCOMPGANHE
           AND F.CDFILIAL = :CDFILIAL
          JOIN VGCAMPCOMPGANHE V
            ON V.CDCAMPCOMPGANHE = C.CDCAMPCOMPGANHE
           AND SYSDATE BETWEEN V.DTINIVGCAMPCG AND V.DTFINVGCAMPCG
    ";

}
